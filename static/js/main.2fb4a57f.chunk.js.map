{"version":3,"sources":["assets/js/audio.js","App.js","assets/js/helpers.js","index.js"],"names":["startAudioStream","next","navigator","mediaDevices","getUserMedia","audio","video","then","stream","audioContext","AudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","processor","createScriptProcessor","clipping","lastClip","volume","clipLevel","averaging","clipLag","smoothingTimeConstant","fftSize","connect","destination","prevEnergy","prevTime","Date","now","onaudioprocess","array","Uint8Array","frequencyBinCount","getByteFrequencyData","length","energy","reduce","a","b","Math","abs","onAudioChange","catch","err","console","log","App","React","useState","color","setColor","useEffect","i","floor","random","getRandomColor","className","style","height","width","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"sOAAO,SAASA,EAAiBC,GAC7BC,UAAUC,aACLC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCC,MAAK,SAASC,GACX,IAAMC,EAAe,IAAIC,aACnBC,EAAWF,EAAaG,iBACxBC,EAAaJ,EAAaK,wBAAwBN,GAClDO,EAAYN,EAAaO,sBAAsB,KAAM,EAAG,GAE9DD,EAAUE,UAAW,EACrBF,EAAUG,SAAW,EACrBH,EAAUI,OAAS,EACnBJ,EAAUK,UAAY,IACtBL,EAAUM,UAAY,IACtBN,EAAUO,QAAU,IAEpBX,EAASY,sBAAwB,IACjCZ,EAASa,QAAU,KAEnBX,EAAWY,QAAQd,GACnBA,EAASc,QAAQV,GACjBA,EAAUU,QAAQhB,EAAaiB,aAQ3C,SAAuBf,EAAUI,EAAWd,GACxC,IAAI0B,EAAa,EACbC,EAAWC,KAAKC,MAEpBf,EAAUgB,eAAiB,WACvB,IAAMC,EAAQ,IAAIC,WAAWtB,EAASuB,mBACtCvB,EAASwB,qBAAqBH,GAC9B,IAAMI,EAASJ,EAAMI,OAEfC,EADSL,EAAMM,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAClBJ,EAEpBK,KAAKC,IAAIf,EAAaU,GAAU,IAChCA,EAAS,IACTR,KAAKC,MAAQF,EAAW,MAExBA,EAAWC,KAAKC,MAChBH,EAAa,IAAOU,EACpBpC,MAxBA0C,CAAchC,EAAUI,EAAWd,MAEtC2C,OAAM,SAASC,GACZC,QAAQC,IAAI,oCAAsCF,M,UCL/CG,EAfH,WAAO,IAAD,EACYC,IAAMC,SAAS,QAD3B,mBACPC,EADO,KACAC,EADA,KAOd,OAJAH,IAAMI,WAAU,WACZrD,GAAiB,kBAAMoD,ECTxB,WAGH,IAFA,IACID,EAAQ,IACHG,EAAI,EAAGA,EAAI,EAAGA,IACnBH,GAHU,mBAGOV,KAAKc,MAAsB,GAAhBd,KAAKe,WAErC,OAAOL,EDG6BM,SACjC,IAGC,yBACIC,UAAU,MACVC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,gBAAiBX,MEVvEY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2fb4a57f.chunk.js","sourcesContent":["export function startAudioStream(next) {\n    navigator.mediaDevices\n        .getUserMedia({ audio: true, video: false })\n        .then(function(stream) {\n            const audioContext = new AudioContext()\n            const analyser = audioContext.createAnalyser()\n            const microphone = audioContext.createMediaStreamSource(stream)\n            const processor = audioContext.createScriptProcessor(2048, 1, 1)\n\n            processor.clipping = false\n            processor.lastClip = 0\n            processor.volume = 0\n            processor.clipLevel = 0.98\n            processor.averaging = 0.95\n            processor.clipLag = 500\n\n            analyser.smoothingTimeConstant = 0.05\n            analyser.fftSize = 1024\n\n            microphone.connect(analyser)\n            analyser.connect(processor)\n            processor.connect(audioContext.destination)\n            onAudioChange(analyser, processor, next)\n        })\n        .catch(function(err) {\n            console.log('The following gUM error occured: ' + err)\n        })\n}\n\nfunction onAudioChange(analyser, processor, next) {\n    let prevEnergy = 0\n    let prevTime = Date.now()\n\n    processor.onaudioprocess = function() {\n        const array = new Uint8Array(analyser.frequencyBinCount)\n        analyser.getByteFrequencyData(array)\n        const length = array.length\n        const values = array.reduce((a, b) => a + b)\n        const energy = values / length\n        if (\n            Math.abs(prevEnergy - energy) > 10 &&\n            energy > 10 &&\n            Date.now() - prevTime > 400\n        ) {\n            prevTime = Date.now()\n            prevEnergy = 0.85 * energy\n            next()\n        }\n    }\n}\n","import React from 'react'\nimport { startAudioStream } from './assets/js/audio.js'\nimport { getRandomColor } from './assets/js/helpers.js'\nimport './App.css'\n\nconst App = () => {\n    const [color, setColor] = React.useState('#fff')\n\n    React.useEffect(() => {\n        startAudioStream(() => setColor(getRandomColor()))\n    }, [])\n\n    return (\n        <div\n            className=\"App\"\n            style={{ height: '100vh', width: '100vw', backgroundColor: color }}\n        />\n    )\n}\n\nexport default App\n","export function getRandomColor() {\n    var letters = '0123456789ABCDEF'\n    var color = '#'\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)]\n    }\n    return color\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}